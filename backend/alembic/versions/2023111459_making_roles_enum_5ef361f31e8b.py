"""Making roles enum

Revision ID: 5ef361f31e8b
Revises: 3bca7bf44a33
Create Date: 2023-11-14 20:59:46.244312

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "5ef361f31e8b"
down_revision = "3bca7bf44a33"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "homework",
        "status",
        existing_type=postgresql.ENUM(
            "NOT_STARTED", "IN_PROGRESS", "FINISHED", name="homeworkstatus"
        ),
        nullable=False,
    )
    
    user_role_enum = sa.Enum(
        'ADMINISTRATOR',
        'PROFESSOR',
        'STUDENT',
        'TA',
        'GUEST',
        name='user_role_enum'
    )
    user_role_enum.create(op.get_bind(), checkfirst=True)

    op.execute("""
    ALTER TABLE roles 
    ALTER COLUMN role TYPE user_role_enum
    USING role::text::user_role_enum
    """)
    
    op.alter_column(
        "roles",
        "role",
        existing_type=sa.VARCHAR(),
        type_=user_role_enum,
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "roles",
        "role",
        existing_type=sa.Enum(
            "ADMINISTRATOR",
            "PROFESSOR",
            "STUDENT",
            "TA",
            "GUEST",
            name="user_role_enum",
        ),
        type_=sa.VARCHAR(),
        nullable=True,
    )
    op.alter_column(
        "homework",
        "status",
        existing_type=postgresql.ENUM(
            "NOT_STARTED", "IN_PROGRESS", "FINISHED", name="homeworkstatus"
        ),
        nullable=True,
    )
    # ### end Alembic commands ###
