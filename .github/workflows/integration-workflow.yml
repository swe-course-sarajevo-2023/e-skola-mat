name: Run Tests

on:
    pull_request:
      types: [opened, synchronize]
jobs:
  backend-tests:
    environment: preview
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ENVIRONMENT: ${{ vars.ENVIRONMENT }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ vars.ACCESS_TOKEN_EXPIRE_MINUTES }}
      REFRESH_TOKEN_EXPIRE_MINUTES: ${{ vars.REFRESH_TOKEN_EXPIRE_MINUTES }}
      BACKEND_CORS_ORIGINS: ${{ vars.BACKEND_CORS_ORIGINS }}
      ALLOWED_HOSTS: ${{ vars.ALLOWED_HOSTS }}
      DEFAULT_DATABASE_HOSTNAME: ${{ vars.DEFAULT_DATABASE_HOSTNAME }}
      DEFAULT_DATABASE_USER: ${{ secrets.DEFAULT_DATABASE_USER }}
      DEFAULT_DATABASE_PASSWORD: ${{ secrets.DEFAULT_DATABASE_PASSWORD }}
      DEFAULT_DATABASE_PORT: ${{ vars.DEFAULT_DATABASE_PORT }}
      DEFAULT_DATABASE_DB: ${{ vars.DEFAULT_DATABASE_DB }}
      TEST_DATABASE_HOSTNAME: ${{ vars.TEST_DATABASE_HOSTNAME }}
      TEST_DATABASE_USER: ${{ secrets.TEST_DATABASE_USER }}
      TEST_DATABASE_PASSWORD: ${{ secrets.TEST_DATABASE_PASSWORD }}
      TEST_DATABASE_PORT: ${{ vars.TEST_DATABASE_PORT }}
      TEST_DATABASE_DB: ${{ vars.TEST_DATABASE_DB }}
      FIRST_SUPERUSER_EMAIL: ${{ secrets.FIRST_SUPERUSER_EMAIL }}
      FIRST_SUPERUSER_PASSWORD: ${{ secrets.FIRST_SUPERUSER_PASSWORD }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            echo "/usr/local/bin" >> $GITHUB_PATH
          
      - name: Docker Compose run
        run: |
            cd backend
            docker-compose -f docker-compose-ci.yml build
            docker-compose -f docker-compose-ci.yml up -d

      - name: Install Python
        uses:  actions/setup-python@v5 
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Running service for 10 seconds
        run: |
          cd backend
          pip install uvicorn
          uvicorn main:app --port 8000 &
          sleep 10 
          curl --fail http://localhost:8000/
          kill $! 

      - name: Run migration script
        run: |
              cd backend
              export PYTHONPATH=$PWD
              echo "Run migrations"
              alembic upgrade head
              
              echo "Create initial data in DB"
              python3 -m app.initial_data

      - name: Run Pytest
        run: |
          cd backend
          pytest

  frontend-tests:
    environment: preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install
      
      - name: Cache npm packages
        uses: actions/cache@v2
        with:
          path: ~/frontend/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      # - name: Run Lint
      #   run: |
      #     cd frontend
      #     npm run lint

      - name: Run Prettier Check
        run: |
          cd frontend
          npx prettier --check .
